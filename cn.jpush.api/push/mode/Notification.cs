using cn.jpush.api.push.notificaiton;
using Newtonsoft.Json;
// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
namespace cn.jpush.api.push.mode
{
    public class Notification 
	{
       
        public Dictionary<string,object> dictionary;

        public String alert{get;set;}
        [JsonProperty(PropertyName = "ios")]
        public iosPlatformNotification iosNotification { get; set; }
        [JsonProperty(PropertyName = "android")]
        public AndroidPlatformNotification AndroidNotification { get; set; }
        [JsonProperty(PropertyName = "winphone")]
        public WinphonePlatformNotification WinphoneNotification { get; set; }

       // private  HashSet<PlatformNotification> notifications;

        public Notification()
        {
            this.alert = null;
            this.iosNotification = null;
            this.AndroidNotification = null;
            this.WinphoneNotification = null;
        }
        public Notification(String alert)
        {
            this.alert = alert;
            this.iosNotification = null;
            this.AndroidNotification = null;
            this.WinphoneNotification = null;
        }
        public Notification(String alert, iosPlatformNotification iosNotification, AndroidPlatformNotification AndroidNotification, WinphonePlatformNotification WinphoneNotification)
        {
            this.alert = alert;
            this.iosNotification = iosNotification;
            this.AndroidNotification = AndroidNotification;
            this.WinphoneNotification = WinphoneNotification;
        }

        public static Notification android(String alert, String title, Dictionary<String, String> extras)
        {
            var platformNotification = new AndroidPlatformNotification(alert, title, 0, extras);
            var notificaiton = new Notification(alert);
            notificaiton.AndroidNotification = platformNotification;
            return notificaiton;
        }
        public static Notification ios(String alert, Dictionary<String, String> extras)
        {
            var platformNotification = new iosPlatformNotification(alert);
            platformNotification.extras = extras;
            var notification = new Notification(alert);
            notification.iosNotification = platformNotification;
            return notification;
        }
        public static Notification ios_auto_badge()
        {
            var platformNotification = new iosPlatformNotification();
            platformNotification.autoBadge();
            var notificaiton = new Notification();
            notificaiton.iosNotification = platformNotification;
            return notificaiton;
        }
        public static Notification ios_set_badge(int badge)
        {
            var platformNotification = new iosPlatformNotification();
            platformNotification.setBadge(badge);

            var notificaiton = new Notification();
            notificaiton.iosNotification = platformNotification;
            return notificaiton;
        }
        public static Notification ios_incr_badge(int badge)
        {
            var platformNotification = new iosPlatformNotification();
            platformNotification.incrBadge(badge);
            var notificaiton = new Notification();
            notificaiton.iosNotification = platformNotification;
            return notificaiton;
        }
        public static Notification winphone(String alert,Dictionary<string,string> extras)
        {
            var platformNotification = new WinphonePlatformNotification(alert);
            platformNotification.extras = extras;
            var notificaiton = new Notification(alert);
            notificaiton.WinphoneNotification = platformNotification;
            return notificaiton;
        }
        //public   Notification  addPlatform(PlatformNotification platformNotification)
        //{
        //    notifications.Add(platformNotification);
        //    return this;
        //}
        //public object toJsonObject()
        //{
        //    Dictionary<string, object> dict = new Dictionary<string, object>();
        //    if (alert != null)
        //    {
        //        dict.Add(PlatformNotification.ALERT, alert);
        //    }
        //    if (this.notifications != null)
        //    {
        //        foreach (var item in this.notifications)
        //        {
        //            dict.Add(item.getPlatformName(), item.toJsonObject());
        //        }
        //    }
        //    return dict;
        //}
	}
}

