using cn.jpush.api.push.notificaiton;
using cn.jpush.api.util;
using Newtonsoft.Json;
// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
namespace cn.jpush.api.push.mode
{
    public class Notification 
	{
        public String alert{get;set;}
        [JsonProperty(PropertyName = "ios")]
        public IosNotification iosNotification { get; set; }
        [JsonProperty(PropertyName = "android")]
        public AndroidNotification AndroidNotification { get; set; }
        [JsonProperty(PropertyName = "winphone")]
        public WinphoneNotification WinphoneNotification { get; set; }

        public Notification()
        {
            this.alert = null;
            this.iosNotification = null;
            this.AndroidNotification = null;
            this.WinphoneNotification = null;
        }
        public Notification(String alert)
        {
            this.alert = alert;
            this.iosNotification = null;
            this.AndroidNotification = null;
            this.WinphoneNotification = null;
        }
        public Notification(String alert, 
                            IosNotification iosNotification,
                            AndroidNotification AndroidNotification, 
                            WinphoneNotification WinphoneNotification)
        {
            this.alert = alert;
            this.iosNotification = iosNotification;
            this.AndroidNotification = AndroidNotification;
            this.WinphoneNotification = WinphoneNotification;
        }

        public static Notification android(String alert, String title)
        {
            var platformNotification = new AndroidNotification().setAlert(alert).setTitle(title);
            var notificaiton = new Notification(alert);
            notificaiton.AndroidNotification = platformNotification;
            return notificaiton;
        }
        public static Notification ios(String alert)
        {
            var iosNotification = new IosNotification().setAlert(alert);
            var notification = new Notification(alert);
            notification.iosNotification = iosNotification;
            return notification;
        }
        public static Notification ios_auto_badge()
        {
            var platformNotification = new IosNotification();
            platformNotification.autoBadge();
            var notificaiton = new Notification();
            notificaiton.iosNotification = platformNotification;
            return notificaiton;
        }
        public static Notification ios_set_badge(int badge)
        {
            var platformNotification = new IosNotification();
            platformNotification.setBadge(badge);

            var notificaiton = new Notification();
            notificaiton.iosNotification = platformNotification;
            return notificaiton;
        }
        public static Notification ios_incr_badge(int badge)
        {
            var platformNotification = new IosNotification();
            platformNotification.incrBadge(badge);
            var notificaiton = new Notification();
            notificaiton.iosNotification = platformNotification;
            return notificaiton;
        }
        public static Notification winphone(String alert)
        {
            var platformNotification = new WinphoneNotification().setAlert(alert);
           
            var notificaiton = new Notification(alert);
            notificaiton.WinphoneNotification = platformNotification;
            return notificaiton;
        }

        public  Notification Check()
        {
            Preconditions.checkArgument(!(isPlatformEmpty() && null == alert), "No notification payload is set.");
            if (iosNotification!=null)
            {
                Preconditions.checkArgument(!(null==iosNotification.alert && null == alert), "No notification payload is set.");
            }
            if(AndroidNotification!=null)
            {
                Preconditions.checkArgument(!(null == AndroidNotification.alert && null == alert), "No notification payload is set.");

            }
            if (WinphoneNotification!=null)
            {
                Preconditions.checkArgument(!(null == WinphoneNotification.alert && null == alert), "No notification payload is set.");

            }
            return this; 
        }
        private bool isPlatformEmpty() 
        {
            return (iosNotification == null && AndroidNotification == null && WinphoneNotification == null);
        }
	}
}

